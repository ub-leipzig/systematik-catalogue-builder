apply plugin: 'com.zyxist.chainsaw'
apply plugin: 'osgi'
apply plugin: 'jacoco'

ext {
    javaModuleName = 'de.ubleipzig.scb.creator'
}

javaModule {
    name = javaModuleName
    extraTestModules = ['org.trellisldp.jpms.app','com.fasterxml.jackson.annotation','org.apache.commons.rdf.jena', 'org.trellisldp.jpms.app.triplestore']
    hacks {
        patches('javax.annotation:javax.annotation-api', 'org.apache.geronimo.specs:geronimo-annotation_1.2_spec')
        patches('org.apache.geronimo.specs:geronimo-jms_1.1_spec', 'javax.jms:javax.jms-api')
        patches('org.hamcrest:hamcrest-library', 'org.hamcrest:hamcrest-core')
    }
}

configurations {
    all {
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'javax.annotation' , module: 'jsr250-api'
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'javax.inject', module: 'javax.inject'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient-osgi'
        exclude group: 'org.apache.httpcomponents', module: 'httpcore-osgi'
    }
}

dependencies {
    patch 'org.apache.geronimo.specs:geronimo-annotation_1.2_spec:1.0-alpha-1'
    patch 'org.apache.geronimo.specs:geronimo-jms_1.1_spec:1.1.1'
    patch "org.hamcrest:hamcrest-library:$hamcrestLibraryVersion"

    implementation("ch.qos.logback:logback-classic:$logbackVersion")
    implementation("com.github.andrewoma.dexx:collection:$dexxCollectionVersion")
    implementation("com.google.guava:guava:$guavaVersion")
    implementation("org.apache.commons:commons-lang3:$commonsLangVersion")
    implementation("de.ubleipzig:image.metadata:$imageMetadataVersion")
    implementation("de.ubleipzig:iiif.vocabulary:$iiifVocabularyVersion")
    implementation project(":scb.templates")
    implementation("commons-io:commons-io:$commonsIoVersion")
    implementation("org.trellisldp:trellis-client:$trellisClientVersion")
    implementation("com.sun.activation:javax.activation:$javaxActivationVersion")
    implementation("com.github.jsonld-java:jsonld-java:$jsonLdVersion")
    implementation("com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion") {force = true}
    implementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion") {force = true}
    implementation("javax.ws.rs:javax.ws.rs-api:$jaxrsVersion")
    implementation("org.apache.commons:commons-csv:$commonsCsvVersion")
    implementation("org.apache.httpcomponents:httpclient:$httpclientVersion")
    implementation("org.apache.httpcomponents:httpclient-cache:$httpclientVersion")
    implementation("org.apache.commons:commons-rdf-jena-jpms:$commonsRdfJenaVersion")
    implementation("de.ubleipzig:jena.arq-jpms:$jenaVersion")
    implementation("de.ubleipzig:jena.base-jpms:$jenaVersion")
    implementation("de.ubleipzig:jena.core-jpms:$jenaVersion")
    implementation("de.ubleipzig:jena.iri-jpms:$jenaVersion")
    implementation("org.apache.thrift:libthrift:$thriftVersion"){
        exclude(module: 'httpclient')
        exclude(module: 'httpcore')
    }
    implementation("org.slf4j:slf4j-api:$slf4jVersion")
    implementation("org.trellisldp:trellis-vocabulary-jpms:$trellisVersion")

    testImplementation("io.dropwizard:dropwizard-auth:$dropwizardVersion")
    testImplementation("io.dropwizard:dropwizard-testing:$dropwizardVersion")
    testImplementation("io.dropwizard:dropwizard-http2:$dropwizardVersion")
    testImplementation("io.jsonwebtoken:jjwt:$jsonWebTokenVersion")
    testImplementation("javax.activation:javax.activation-api:$activationApiVersion")
    testImplementation("org.apache.commons:commons-collections4:$commonsCollectionsVersion")
    testImplementation("de.ubleipzig:jena.rdfconnection-jpms:$jenaVersion")
    testImplementation("de.ubleipzig:jena.dboe-jpms:$jenaVersion")
    testImplementation("org.apache.httpcomponents:httpclient-cache:$httpclientVersion")
    testImplementation("org.apache.servicemix.bundles:org.apache.servicemix.bundles.kafka-clients:$kafkaVersion")
    testImplementation("org.apache.servicemix.bundles:org.apache.servicemix.bundles.mustache-compiler:$mustacheVersion")
    testImplementation("org.eclipse.jetty:jetty-alpn-java-server:$jettyAlpnVersion")

    testImplementation("org.trellisldp:trellis-agent-jpms:$trellisVersion")
    testImplementation("org.trellisldp:trellis-api-jpms:$trellisVersion")
    testImplementation("org.trellisldp:trellis-app-jpms:$trellisVersion")
    testImplementation("org.trellisldp:trellis-app-triplestore-jpms:$trellisVersion")
    testImplementation("org.trellisldp:trellis-audit-jpms:$trellisVersion")
    testImplementation("org.trellisldp:trellis-file-jpms:$trellisVersion")
    testImplementation("org.trellisldp:trellis-id-jpms:$trellisVersion")
    testImplementation("org.trellisldp:trellis-io-jena-jpms:$trellisVersion")
    testImplementation("org.trellisldp:trellis-http-jpms:$trellisVersion")
    testImplementation("org.trellisldp:trellis-namespaces-jpms:$trellisVersion")
    testImplementation("org.trellisldp:trellis-triplestore-jpms:$trellisVersion")
    testImplementation("org.trellisldp:trellis-webac-jpms:$trellisVersion")
}

jar {
    manifest {
        description project.description
        vendor project.vendor
        license project.license

        instruction 'Automatic-Module-Name', javaModuleName
        instruction 'Import-Package', '*'
        instruction 'Export-Package', "$javaModuleName;version=$projectOsgiVersion"
        instruction 'Require-Capability', "$osgiEeJavaVersion"
    }
}