buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

plugins {
    id "com.zyxist.chainsaw" version "0.1.3"
    id 'com.github.hierynomus.license' version '0.14.0'
    id 'io.codearte.nexus-staging' version '0.9.0'
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'checkstyle'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'osgi'

group = 'de.ubleipzig'

sourceCompatibility = 1.10
targetCompatibility = 1.10

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    name = 'Systematik Catalogue Builder'
    moduleName = 'de.ubleipzig.scb'
    description = 'An Web Annotation Creation Tool'
    url = 'https://github.com/ub-leipzig/systematik-catalogue-builder'
    inceptionYear = '2017'
    vendor = 'Pandora Ecosystem'
    homepage = 'http://cool.pandora'
    docURL = 'https://github.com/ub-leipzig/systematik-catalogue-builder/wiki'
    license = 'Apache 2'

    dropwizardVersion = '1.2.0'
    jaiImageIoVersion = '1.3.0'
    jacksonVersion = '2.9.1'
    jettyAlpnVersion = '9.4.8.v20171121'
    junitVersion = '5.1.0'
    logbackVersion = '1.2.3'
    slf4jVersion = "1.7.25"
    commonsRdfVersion = '0.5.0'
    jaxrsVersion = '2.1'
    trellisVersion = '0.5.2'
    trellisAppVersion = '0.6.0-SNAPSHOT'
    projectOsgiVersion = project.version.replaceAll("-SNAPSHOT", ".SNAPSHOT")
    xerxesVersion = '2.11.0'
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs.add("-Xlint:unchecked")
        options.compilerArgs.add("-Xlint:deprecation")
        options.compilerArgs.addAll(["--add-modules", "jdk.incubator.httpclient"])
    }
}

checkstyle {
    configFile = rootProject.file('build/checkstyle/checkstyle.xml')
    configProperties.checkstyleConfigDir = rootProject.file('build/checkstyle/')
    toolVersion = '8.8'
}

configurations {
    buildToolsConfig
}

dependencies {
    buildToolsConfig 'org.trellisldp:trellis-build-tools:0.2.0'
}

task processBuildTools(type: Copy) {
    from {
        configurations.buildToolsConfig.collect {
            zipTree(it).matching {
                include 'checkstyle/*.xml'
                include 'license/*.txt'
            }
        }
    }
    into 'build'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

modifyPom {
    //noinspection GroovyAssignabilityCheck
    project {
        name name
        description description
        url url
        inceptionYear inceptionYear

        organization {
            name vendor
            url homepage
        }

        developers {
            developer {
                id 'christopher-johnson'
                name 'Christopher Johnson'
                email 'chjohnson @ (domain of organization url)'
                organization 'Pan-dora Ecosystem'
                organizationUrl 'https://pan-dora.github.io/'
                roles {
                    role 'developer'
                }
                timezone '+1'
            }
        }

        scm {
            connection 'scm:git:git://github.com/pan-dora/ldp-client.git'
            developerConnection 'scm:git:git@github.com/pan-dora/ldp-client.git'
            url 'https://github.com/pan-dora/ldp-client/'
            tag 'HEAD'
        }

        licenses {
            license {
                name 'Apache License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0'
            }
        }
    }
}

nexusStaging {
    packageGroup = "cool.pandora"
    stagingProfileId = "4d5f13c386f543"
}

nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
}

license {
    include "**/*.java"
    header rootProject.file('build/license/HEADER.txt')
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

jar {
    manifest {
        description project.description
        docURL project.docURL
        vendor project.vendor
        license project.license

        instruction 'Automatic-Module-Name', moduleName
        instruction 'Import-Package', '*'
        instruction 'Export-Package', "${moduleName};version=${projectOsgiVersion}"
        instruction 'Require-Capability', '''\
            osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)",
            osgi.serviceloader;
                filter:="(osgi.serviceloader=org.apache.commons.rdf.api.RDF)";
                resolution:=mandatory; cardinality:=at_least_one
            '''
    }
}

javadoc {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.addStringOption('-module-path', classpath.asPath)
        options.addBooleanOption('html5', true)
    }
    destinationDir = new File(projectDir, "docs/${version}")
    options {
        links "https://docs.oracle.com/javase/8/docs/api/"
        links 'https://docs.oracle.com/javaee/7/api/'
        links 'https://trellis-ldp.github.io/trellis/apidocs/'
        links 'https://commons.apache.org/proper/commons-rdf/apidocs/'
    }
}



javaModule.name = 'de.ubleipzig.scb'
javaModule.patchModules 'org.slf4j:log4j.over.slf4j': 'log4j:log4j'
javaModule.patchModules 'org.apache.httpcomponents:httpclient-osgi': 'commons-codec:commons-codec'
javaModule.patchModules 'javax.inject:javax.inject': 'org.apache.servicemix.bundles:org.apache.servicemix.bundles' +
        '.javax-inject'
javaModule.patchModules 'com.google.code.findbugs:jsr305': 'javax.annotation:jsr250-api'
javaModule.patchModules 'xerces:xercesImpl': 'org.apache.servicemix.bundles:org.apache.servicemix.bundles.xerces'
javaModule.patchModules 'org.apache.httpcomponents:httpcore': 'org.apache.httpcomponents:httpcore-osgi'
javaModule.patchModules 'org.apache.jena:jena-shaded-guava': 'org.apache.jena:jena-osgi'
javaModule.patchModules 'org.apache.jena:jena-core': 'org.apache.jena:jena-osgi'
javaModule.patchModules 'org.apache.jena:jena-arq': 'org.apache.jena:jena-osgi'
javaModule.patchModules 'org.apache.geronimo.specs:geronimo-jms_1.1_spec': 'javax.jms:javax.jms-api'
javaModule.patchModules 'xml-apis:xml-apis': 'xerces:xercesImpl'

dependencies {
    patch 'log4j:log4j:1.2.17'
    patch 'commons-codec:commons-codec:1.11'
    patch 'org.apache.servicemix.bundles:org.apache.servicemix.bundles.javax-inject:1_2'
    patch 'com.google.code.findbugs:jsr305:3.0.2'
    patch 'org.apache.servicemix.bundles:org.apache.servicemix.bundles.xerces:2.11.0_1'
    patch 'org.apache.httpcomponents:httpcore:4.4.6'
    patch 'org.apache.jena:jena-shaded-guava:3.6.0'
    patch 'org.apache.jena:jena-core:3.6.0'
    patch 'org.apache.jena:jena-arq:3.6.0'
    patch 'org.apache.geronimo.specs:geronimo-jms_1.1_spec:1.1.1'
    patch 'xml-apis:xml-apis:1.4.01'

    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'cool.pandora', name: 'ldp-client', version: '0.1.0'
    compile group: 'org.apache.commons', name: 'commons-rdf-jena', version: commonsRdfVersion
    compile group: 'org.trellisldp', name: 'trellis-vocabulary', version: trellisVersion
    compile "com.github.jai-imageio:jai-imageio-core:${jaiImageIoVersion}"
    compile "javax.ws.rs:javax.ws.rs-api:${jaxrsVersion}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    testCompile group: 'xerces', name: 'xercesImpl', version: xerxesVersion
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testCompile("cool.pandora:ldp-client:0.1.0")
    testCompile group: 'io.dropwizard', name: 'dropwizard-testing', version: dropwizardVersion
    testCompile group: 'org.eclipse.jetty', name: 'jetty-alpn-java-server', version: jettyAlpnVersion
    testCompile group: 'org.trellisldp', name: 'trellis-app', version: trellisAppVersion
    testCompile group: 'org.apache.commons', name: 'commons-rdf-jena', version: commonsRdfVersion
    testRuntimeClasspath group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
}

